{"version":3,"file":"static/js/936.a3e19959.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ListItem_item__3+qKK\",\"icon\":\"ListItem_icon__dP-8S\",\"link\":\"ListItem_link__twHxh\"};","import { Link, useLocation } from 'react-router-dom';\nimport { BiStar } from 'react-icons/bi';\nimport css from './ListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ListItem = ({ name, id }) => {\n    const location = useLocation();\n\n    return (\n        <li className={css.item}>\n            <BiStar className={css.icon} />\n            <Link\n                to={`/movies/${id}`}\n                state={{from: location}}\n                className={css.link}\n            >\n                {name}\n            </Link>\n        </li>\n    )\n};\n\nListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n}\n\nexport default ListItem;","// extracted by mini-css-extract-plugin\nexport default {\"trending\":\"Home_trending__Oyzul\",\"trending__header\":\"Home_trending__header__rw9hG\",\"trending__list\":\"Home_trending__list__PrLYE\"};","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport movieAPI from 'services/movie-api';\nimport ListItem from 'components/ListItem/ListItem';\nimport css from './Home.module.css';\n\nconst Home = () => {\n    const [trending, setTrending] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const generateTrendingList = () => {\n        movieAPI\n            .fetchTrending()\n            .then(movies => setTrending(movies))\n            .catch(error => toast.error(`${error.message}`))\n            .finally(() => { setLoading(false) });\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        generateTrendingList();\n    }, []);\n\n    return (\n        <section className={css.trending}>\n            <h2 className={css.trending__header}>Trending today</h2>\n            <ul className={css.trending__list}>\n                {trending && trending.map(movie => {\n                    return <ListItem\n                        key={movie.id}\n                        name={movie.title}\n                        id={movie.id}\n                    />\n                })}\n                {loading && <Loader />}\n            </ul>\n        </section>\n    )\n};\n\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '69fc77f6620d7e54166b698911b2babb';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE_DETAILS = '/movie';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nasync function fetchTrending() {\n    try {\n        const fetchUrl = `${ BASE_URL }${TRENDING}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data.results;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function fetchMovieDetails(id) {\n    try {\n        const fetchUrl = `${ BASE_URL }${MOVIE_DETAILS}/${id}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function fetchCast(id) {\n    try {\n        const fetchUrl = `${ BASE_URL }${MOVIE_DETAILS}/${id}${CAST}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function fetchReviews(id) {\n    try {\n        const fetchUrl = `${ BASE_URL }${MOVIE_DETAILS}/${id}${REVIEWS}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function searchMovies(query) {\n    try {\n        const fetchUrl = `${ BASE_URL }${SEARCH}?api_key=${API_KEY}&query=${query}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n}\n\nconst movieAPI = {\n    fetchTrending,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n    searchMovies,\n};\n\nexport default movieAPI;"],"names":["name","id","location","useLocation","className","css","to","state","from","useState","trending","setTrending","loading","setLoading","useEffect","movieAPI","then","movies","catch","error","toast","message","finally","map","movie","ListItem","title","Loader","BASE_URL","API_KEY","TRENDING","MOVIE_DETAILS","CAST","REVIEWS","SEARCH","fetchTrending","fetchUrl","axios","response","data","results","Promise","reject","Error","fetchMovieDetails","fetchCast","fetchReviews","searchMovies","query"],"sourceRoot":""}