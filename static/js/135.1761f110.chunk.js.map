{"version":3,"file":"static/js/135.1761f110.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"goBackBtn\":\"MovieDetails_goBackBtn__WL+X0\",\"backArrow\":\"MovieDetails_backArrow__S2XGU\",\"basicInfo\":\"MovieDetails_basicInfo__oprnA\",\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"name\":\"MovieDetails_name__LW6-I\",\"description\":\"MovieDetails_description__33mrB\",\"title\":\"MovieDetails_title__cUGs9\",\"additionalInfo\":\"MovieDetails_additionalInfo__4J0eA\",\"secondaryTitle\":\"MovieDetails_secondaryTitle__ZMNtP\",\"list\":\"MovieDetails_list__dbNMP\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { BsArrowLeftCircleFill } from 'react-icons/bs';\nimport movieAPI from 'services/movie-api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n\n    const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    \n    useEffect(() => {\n        setLoading(true);\n        movieAPI\n            .fetchMovieDetails(movieId)\n            .then(result => setMovie(result))\n            .catch(error => toast.error(`${error.message}`))\n            .finally(() => { setLoading(false) });\n    }, [movieId]);\n\n    return (\n        <>\n            {movie &&\n                <div className={css.movieDetails}>\n                    <Link to={location.state?.from ?? '/movies'} className={css.goBackBtn}>\n                        <BsArrowLeftCircleFill className={css.backArrow} />\n                        Go back\n                    </Link>\n                    <div className={css.basicInfo}>\n                        <img\n                            src={`${BASE_IMG_URL}${movie.poster_path}`}\n                            alt={movie.title}\n                            width='280'\n                        />\n                        <div className={css.movieInfo}>\n                            <h2 className={css.name}>{movie.title} ({movie.release_date.slice(0, 4)})</h2>\n                            <p className={css.description}>User Score:</p>\n                            <h3 className={css.title}>Overview</h3>\n                            <p className={css.description}>{movie.overview}</p>\n                            <h4 className={css.title}>Genres</h4>\n                            <p className={css.description}>{movie.genres.map(genre => { return `${genre.name} ` })}</p>\n                        </div>\n                    </div>\n                    <div className={css.additionalInfo}>\n                        <h5 className={css.secondaryTitle}>Additional Information:</h5>\n                        <Link\n                            to={`/movies/${movie.id}/cast`}\n                            className={css.link}\n                            state={{ from: location.state?.from ?? '/movies' }}\n                        >\n                            Cast\n                        </Link>\n                        <Link\n                            to={`/movies/${movie.id}/reviews`}\n                            className={css.link}\n                            state={{ from: location.state?.from ?? '/movies' }}\n                        >\n                            Reviews\n                        </Link>\n                    </div>\n                    <Suspense fallback={<Loader />}>\n                        <Outlet />\n                    </Suspense>\n                </div>\n            }\n            {loading && <Loader />}\n        </>\n    )\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '69fc77f6620d7e54166b698911b2babb';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE_DETAILS = '/movie';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nasync function fetchTrending() {\n    try {\n        const fetchUrl = `${ BASE_URL }${TRENDING}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data.results;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function fetchMovieDetails(id) {\n    try {\n        const fetchUrl = `${ BASE_URL }${MOVIE_DETAILS}/${id}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function fetchCast(id) {\n    try {\n        const fetchUrl = `${ BASE_URL }${MOVIE_DETAILS}/${id}${CAST}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function fetchReviews(id) {\n    try {\n        const fetchUrl = `${ BASE_URL }${MOVIE_DETAILS}/${id}${REVIEWS}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n};\n\nasync function searchMovies(query) {\n    try {\n        const fetchUrl = `${ BASE_URL }${SEARCH}?api_key=${API_KEY}&query=${query}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        return error;\n    }\n}\n\nconst movieAPI = {\n    fetchTrending,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n    searchMovies,\n};\n\nexport default movieAPI;"],"names":["movieId","useParams","useState","movie","setMovie","loading","setLoading","location","useLocation","useEffect","movieAPI","then","result","catch","error","toast","message","finally","className","css","to","state","from","src","poster_path","alt","title","width","release_date","slice","overview","genres","map","genre","name","id","Suspense","fallback","Loader","BASE_URL","API_KEY","TRENDING","MOVIE_DETAILS","CAST","REVIEWS","SEARCH","fetchTrending","fetchUrl","axios","response","data","results","Promise","reject","Error","fetchMovieDetails","fetchCast","fetchReviews","searchMovies","query"],"sourceRoot":""}